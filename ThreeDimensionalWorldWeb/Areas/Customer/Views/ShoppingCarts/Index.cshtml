@using ThreeDimensionalWorld.Models
@using ThreeDimensionalWorld.Utility
@model IEnumerable<ShoppingCartItem>

@{
    ViewData["Title"] = "Количка";
}

<div class="container mt-5 ">
    <div class="row">
        @foreach (var item in Model)
        {
            ProductFile productFile = item.Product!.Files.ToList().FirstOrDefault(f => AllowedFormats.AllAllowedFormats.Contains(System.IO.Path.GetExtension(f.Name).ToLower()))!;

            <div class="col-md-4 mb-4 card-holder">
                <div class="card">
                    <div class="card-3d-holder">
                        <div class="stl-container" 
                        data-3d-src="/3dModels/@productFile!.Name"
                        style="width: 100%; aspect-ratio: 3/2;"
                        data-3d-color="@item.Color!.ColorCode"></div>
                    </div>
                    <div class="card-body text-center">
                        <h5 class="card-title">@item.Product.Title</h5>
                        <h6 class="card-subtitle price-item">@String.Format("{0:C}", item.GetPrice())</h6>
                        <div>
                            <div class="row justify-content-center">
                                <div class="input-group" style="display: flex; gap: 1rem; flex-wrap: nowrap;">
                                    <div class="input-group-prepend">
                                        <button class="btn btn-outline-danger decrement" type="button">
                                            <i class="bi bi-dash-circle-fill"></i>
                                        </button>
                                    </div>
                                    <input type="number" class="form-control text-center count change-quantity"
                                           style="min-width: 3rem;"
                                           data-shopping-cart-item-id="@item.Id"
                                           value="@item.Quantity" />
                                    <div class="input-group-append">
                                        <button class="btn btn-outline-success increment" type="button">
                                            <i class="bi bi-plus-circle-fill"></i>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                        <button class="btn btn-danger remove-shopping-cart-item" data-shopping-cart-item-id="@item.Id">Премахни</button>
                </div>
            </div>
        }
    </div>
</div>

@if(Model.Count() > 0)
{
    
    <a asp-controller="Orders" asp-action="Create" class="btn btn-primary">Продължете</a>
}
else
{
    <h1>Няма елементи в количката</h1>
}

@section Scripts {
    <script src="~/js/stlDisplay.js"></script>
    <script>
        const typingTimers = {};

        document.addEventListener("DOMContentLoaded", function () {
            // Increment button click event
            var incrementButtons = document.querySelectorAll('.increment');
            incrementButtons.forEach(function (button) {
                button.addEventListener('click', function () {
                    var input = this.closest('.input-group').querySelector('.count');
                    var count = parseInt(input.value) || 1;
                    count++;
                    input.value = count;
                    clearTimeout(typingTimers[input]);
                    typingTimers[input] = setTimeout(() => sendNewQuantity(input), 2000);
                });
            });

            // Decrement button click event
            var decrementButtons = document.querySelectorAll('.decrement');
            decrementButtons.forEach(function (button) {
                button.addEventListener('click', function () {
                    var input = this.closest('.input-group').querySelector('.count');
                    var count = parseInt(input.value) || 1;
                    if (count > 1) {
                        count--;
                        input.value = count;
                        clearTimeout(typingTimers[input]);
                        typingTimers[input] = setTimeout(() => sendNewQuantity(input), 2000);
                    }
                });
            });
           
            const removeShoppingCartItemsBtns = Array.from(document.querySelectorAll(".remove-shopping-cart-item"));
            const changeQuantity = Array.from(document.querySelectorAll(".change-quantity"));

            removeShoppingCartItemsBtns.forEach(item => {
                item.addEventListener("click", e => {
                    const id = parseInt(e.currentTarget.getAttribute("data-shopping-cart-item-id"))
                    $.ajax({
                        url: "/api/ShoppingCarts/RemoveFromCart",
                        contentType: "application/json",
                        type: "POST",
                        data: JSON.stringify(id),
                        success: function (data) {
                            const cardHolder = item.closest(".card-holder");
                            cardHolder.parentElement.removeChild(cardHolder);
                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                            console.error("Error:", textStatus, errorThrown);
                        }
                    });
                })

            })
            
            changeQuantity.forEach(item => {
                item.addEventListener("input", e => {
                    clearTimeout(typingTimers[item]);
                    typingTimers[item] = setTimeout(() => sendNewQuantity(item), 2000);
                })
            })

            function sendNewQuantity(inputElement) {
                const newQuantity = parseInt(inputElement.value);
                const id = parseInt(inputElement.getAttribute("data-shopping-cart-item-id"))
                const dataToSend = { Id: id, NewQuantity: newQuantity }
                

                $.ajax({
                    url: "/api/ShoppingCarts/ShoppingCartItemChangeQuantity",
                    contentType: "application/json",
                    type: "POST",
                    data: JSON.stringify(dataToSend),
                    success: function (data) {
                        inputElement.closest(".card").querySelector(".price-item").textContent = data.priceItem
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        console.error("Error:", textStatus, errorThrown);
                    }
                });
            }
        })
    </script>
}